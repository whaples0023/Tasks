?fit.bd()
data(ANolislizards)
data <- (ANolislizards)
data <- ("ANolislizards")
data <- ("Anolislizards")
sampling.f <- Ntip(Anolislizards)/0.2
sampling.f <- Ntip("Anolislizards")/0.2
sampling.f<-Ntip("Anolislizards")/0.2
sampling.f<-("Anolislizards")/0.2
sampling.f<-(("Anolislizards")/0.2)
bd.fit<-fit.bd("Anolislizards", rho=0.2.f)
bd.fit<-fit.bd("Anolislizards", rho=0.2)
bd.fit<-fit.bd('Anolislizards', rho=0.2)
lizards<-ltt(AnolisTree)
data<-ltt(AnolisTree)
lizards <- (data)
bd.fit<-fit.bd(lizards, rho=0.2)
bd.fit<-fit.bd('lizards', rho=0.2)
sampling.f<-Ntip(lizards)/0.2
sampling.f<-Ntip(lizards)/0.2
sampling.f<-(lizards)/0.2
sampling.f<-Ntip.phylo(lizards)/0.2
bd.fit<-fit.bd(lizards, rho=sampling.f)
bd.fit<-fit.bd((lizards), rho=sampling.f)
bd.fit<-fit.bd((lizards),rho=(sampling.f))
bd.fit<-fit.bd("lizards",rho=(sampling.f))
bd.fit<-fit.bd((lizards),rho=(sampling.f))
bd.fit<-fit.bd(lizards,rho=sampling.f)
bd.fit<-fit.bd.phylo(lizards,rho=sampling.f)
bd.fit<-fit.bd(lizards,rho=Ntip.phylo(lizards)/0.2)
bd.fit<-fit.bd(lizards,rho=sampling.f)
bd.fit<-fit.yule(lizards,rho=sampling.f)
bd.fit<-fitBayes(lizards,rho=sampling.f)
bd.fit<-"fit.bd"(lizards,rho =sampling.f)
bd.fit<-fit.bd(lizards,rho =sampling.f)
data<-ltt(abline)
data<-(abline)
lizards <- (data)
sampling.f<-Ntip.phylo(lizards)/0.2
sampling.f<-Ntip(lizards)/0.2
sampling.f<-Ntip.multiPhylo(lizards)/0.2
sampling.f<-Ntip(lizards)/0.2
sampling.f<-"Ntip"(lizards)/0.2
library(phytools)
library(ape)
text.string<-
"(((((((cow,pig),whale),bat(,(lemur,human))),(robin,iguana)),coelacanth),(gold_fish,trout)),shark);"
vert.tree<-read.tree (text=text.string)
plot(vert.tree, edge.width=2)
nodelabels(frame="circle", bg='white', cex=1)
#Question1: human because they both come from node 14?
#Note to self - A good place to practice commands for phylogeny tree
vert.tree
#Question2: There are no branch lengths.
str(vert.tree)
tree<-read.tree(text="(((A,B),(C,D)),E);")
plotTree(tree, offset=1)
tiplabels(frame="circle", bg='lightblue', cex=1)
nodelabels(frame="circle", bg='white', cex=1)
tree$tip.label
tree$edge
AnolisTree<-force.ultrametric(read.tree("https://jonsmitchell.com/data/anolis.tre"))
par(las=1)
hist(AnolisTree$edge.length, col='black', border='white', main="", xlab="edge lengths for the Anolis tree", ylim=c(0,50), xlim=c(0,6))
tipEdges <- which(AnolisTree$edge[,2]<=Ntip(AnolisTree))
Lengths <- AnolisTree$edge.length
names (Lengths) <- AnolisTree$tip.label
names (Lengths) [which(Lengths == min(Lengths))]
plot(AnolisTree, cex=0.25)
Labs <- sapply(AnolisTree$edge.length, round, digits=2)
edgelabels(text=Labs, cex=0.25)
?plot.phylo
#Question3: plot(Some.Data, show.tip.label=FALSE)
#Question4: plot(Some.Data, type= "fan")
#Question5: plot(Some.Data, tip.color=c("red",some number)
AnolisTree$edge
AnolisTree$tip.label
ShortestEdge <- which.min(Lengths)
which.min(Lengths)
#Question6:Anolis_occultus has the shortest edge length
#Question7: The code below this line
AnolisTree2 <-drop.tip(AnolisTree, tip = ShortestEdge)
#Question8: The code below this line
plot(AnolisTree2, cex = 0.25)
ltt(AnolisTree)
abline (0, 1, lwd=2, col='red', lty=2)
#Question9: This line never goes down because the number of lineages are increasing. The slope is always the same, and these lizards are reproducing at a constant rate.
?fit.bd()
data<-ltt(AnolisTree)
lizards <- (data)
sampling.f<-Ntip.phylo(lizards)/0.2
bd.fit<-fit.bd(lizards,rho =sampling.f)
bd.fit<-fit.bd((lizards),rho =sampling.f)
bd.fit<-fit.bd((lizards),rho =(sampling.f))
bd.fit<-fit.bd(lizards),rho =sampling.f)
bd.fit<-fit.bd(lizards), rho =sampling.f)
bd.fit<-fit.bd(lizards) rho =sampling.f)
bd.fit<-fit.bd(lizards, rho =sampling.f)
data<-AnolisTree
lizards <- (data)
sampling.f<-Ntip.phylo(lizards)/0.2
bd.fit<-fit.bd(lizards, rho =sampling.f)
print(bd.fit)
b
calc(b)
sum(b)
sum(bd)
sum('bd')
abline (0, 1, lwd=2, col='red', lty=2)
plot(bd.fit)
plot(bd.fit)
plot(bd.fit, xlab=100, ylab=100)
plot(bd.fit, x=100, y=100)
plot(bd.fit, xlim=(0,100), ylim=(0,100)
plot(bd.fit, xlim=(0 100), ylim=(0 100)
plot(bd.fit, xlim=(100), ylim=(0 100)
plot(bd.fit,TRUE, data)
plot(bd.fit,TRUE data)
plot(bd.fit,TRUE, data)
plot(bd.fit, cex=0.25, TRUE, data)
length(bd.fit)
head(bd.fit)
row.names(bd.fit)
row.names.data.frame(bd.fit)
head.matrix(bd.fit)
plot.design(bd.fit)
print(bd.fit)
library(phytools)
library(ape)
text.string<-
"(((((((cow,pig),whale),bat(,(lemur,human))),(robin,iguana)),coelacanth),(gold_fish,trout)),shark);"
vert.tree<-read.tree (text=text.string)
plot(vert.tree, edge.width=2)
nodelabels(frame="circle", bg='white', cex=1)
#Question1: human because they both come from node 14?
#Note to self - A good place to practice commands for phylogeny tree
vert.tree
#Question2: There are no branch lengths.
str(vert.tree)
tree<-read.tree(text="(((A,B),(C,D)),E);")
plotTree(tree, offset=1)
tiplabels(frame="circle", bg='lightblue', cex=1)
nodelabels(frame="circle", bg='white', cex=1)
tree$tip.label
tree$edge
AnolisTree<-force.ultrametric(read.tree("https://jonsmitchell.com/data/anolis.tre"))
par(las=1)
hist(AnolisTree$edge.length, col='black', border='white', main="", xlab="edge lengths for the Anolis tree", ylim=c(0,50), xlim=c(0,6))
tipEdges <- which(AnolisTree$edge[,2]<=Ntip(AnolisTree))
Lengths <- AnolisTree$edge.length
names (Lengths) <- AnolisTree$tip.label
names (Lengths) [which(Lengths == min(Lengths))]
plot(AnolisTree, cex=0.25)
Labs <- sapply(AnolisTree$edge.length, round, digits=2)
edgelabels(text=Labs, cex=0.25)
?plot.phylo
#Question3: plot(Some.Data, show.tip.label=FALSE)
#Question4: plot(Some.Data, type= "fan")
#Question5: plot(Some.Data, tip.color=c("red",some number)
AnolisTree$edge
AnolisTree$tip.label
ShortestEdge <- which.min(Lengths)
which.min(Lengths)
#Question6:Anolis_occultus has the shortest edge length
#Question7: The code below this line
AnolisTree2 <-drop.tip(AnolisTree, tip = ShortestEdge)
#Question8: The code below this line
plot(AnolisTree2, cex = 0.25)
ltt(AnolisTree)
abline (0, 1, lwd=2, col='red', lty=2)
#Question9: This line never goes down because the number of lineages are increasing. The slope is always the same, and these lizards are reproducing at a constant rate.
?fit.bd()
data<-AnolisTree
lizards <- (data)
sampling.f<-Ntip.phylo(lizards)/0.2
bd.fit<-fit.bd(lizards, rho =sampling.f)
print(bd.fit)
?plot.phylo
#Question10: ML(b/lambda) = 0.001187 ML(d/mu) = 0 log(L) = 101.5265
layout.show(bd.fit)
#Question10: ML(b/lambda) = 0.001187 ML(d/mu) = 0 log(L) = 101.5265
length.out(bd.fit)
#Question10: ML(b/lambda) = 0.001187 ML(d/mu) = 0 log(L) = 101.5265
seq_len(bd.fit)
#Question10: ML(b/lambda) = 0.001187 ML(d/mu) = 0 log(L) = 101.5265
plot.phylo(bd.fit)
#Question10: ML(b/lambda) = 0.001187 ML(d/mu) = 0 log(L) = 101.5265
install.packages(treebase)
#Question10: ML(b/lambda) = 0.001187 ML(d/mu) = 0 log(L) = 101.5265
install.packages(treebase)
install.packages("treebase")
#Question10: ML(b/lambda) = 0.001187 ML(d/mu) = 0 log(L) = 101.5265
library(treebase)
data(treebase)
plot.phylo(tree frog)
head(treebase)
par(las=1)
hist(treebase$edge.length, col='black', border='white', main="", xlab="edge lengths for treebase", ylim=c(0,50), xlim=(0,6))
vert.tree
vert.treebase
cache_treebase(file=paste("treebase",Sys.Date(), "rda",sep = ""),pause1 = 3, pause2 = 3, attempts = 10, max_trees = Inf, only_metadata = FALSE, save =TRUE)
cache_treebase(file=paste("treebase",Sys.Date(tree frog), "rda",sep = ""),pause1 = 3, pause2 = 3, attempts = 10, max_trees = Inf, only_metadata = FALSE, save =TRUE)
cache_treebase(file=paste("treebase",Sys.Date(), "rda",sep = "tree frog"),pause1 = 3, pause2 = 3, attempts = 10, max_trees = Inf, only_metadata = FALSE, save =TRUE)
cache_treebase(file=paste("treebase",Sys.Date(), "rda",sep = ""),pause1 = 3, pause2 = 3, attempts = 10, max_trees = Inf, only_metadata = FALSE, save =TRUE)
search_treebase(tree frog)
search_treebase()
search_treebase(by )
search_treebase(), by
search_treebase() by
search_treebase() by taxon
search_treebase() by taxa
search_treebase(taxa by year)
setwd('C:\\Users\\Mallori\\OneDrive\\Desktop\\Evolution\\Tasks\\Task_09')
library(phytools)
AnolisTree<-force.ultrametric(read.tree("https://jonsmitchell.com/data/anolis.tre"))
par(las=1)
hist(AnolisTree$edge.length, col='black', border='white', main="", xlab="edge lengths for the Anolis tree", ylim=c(0,50), xlim=c(0,6))
tipEdges <- which(AnolisTree$edge[,2]<=Ntip(AnolisTree))
Lengths <- AnolisTree$edge.length
names (Lengths) <- AnolisTree$tip.label
names (Lengths) [which(Lengths == min(Lengths))]
plot(AnolisTree, cex=0.25)
Labs <- sapply(AnolisTree$edge.length, round, digits=2)
edgelabels(text=Labs, cex=0.25)
plot(AnolisTree,type="fan")
#Question 1: There are five tips with no branch lengths present.
data<-read.csv("https://jonsmitchell.com/data/svl.csv", stringsAsFactors =F, row.names=1)
head(data)
length(data)
row(data)
names(data)
max(data)
plot(data)
#Question 2: The "data" is a linear object with some data points relating to different species.
svl<-setNames (data$svl, rownames(data))
Ancestors<-fastAnc(AnolisTree, svl, vars=TRUE, CI=TRUE)
par(mar=c(0.1,0.1,0.1,0.1))
plot(tree,type="fan",lwd=2,show.tip.label=F)
tiplabels(pch=16, cex=0.25*svl[tree$tip.label])
nodelabels(pch=16, cex=0.25*Ancestors$ace)
obj<-contMap(AnolisTree, svl, plot=F)
plot(obj,type="fan", legend=0.7*max(nodeHeights(AnolisTree)), sig=2, fsize=c(0.7, 0.9))
fossilData<- data.frame(svl=log(c(25.4, 23.2, 17.7, 19.7, 24, 31)), tipl=c("Anolis_anliniger", "Anolis_anliniger","Anolis_occultus","Anolis_ricordii", "Anolis_cristatellus", "Anolis_occultus"), tip2=c("Anolis_chlorocyanus", "Anolis_coelestinus", "Anolis_hendersoni", "Anolis_cybotes", "Anolis_angusticeps", "Anolis_angusticeps"))
fossilNodes<-c()
nodeN<-c()
for(i in ) {
Node<-fastMRCA(AnolisTree,fossilData[i, "tip1"], fossilData[i,"tip2"])
fossilNodes[i]<-fossilData[i, "svl"]
nodeN[i]<-Node
}
for(i in 1:90 ) {
Node<-fastMRCA(AnolisTree,fossilData[i, "tip1"], fossilData[i,"tip2"])
fossilNodes[i]<-fossilData[i, "svl"]
nodeN[i]<-Node
}
for(i in 1:1000 ) {
Node<-fastMRCA(AnolisTree,fossilData[i, "tip1"], fossilData[i,"tip2"])
fossilNodes[i]<-fossilData[i, "svl"]
nodeN[i]<-Node
}
for(i in 100:fossilData ) {
Node<-fastMRCA(AnolisTree,fossilData[i, "tip1"], fossilData[i,"tip2"])
fossilNodes[i]<-fossilData[i, "svl"]
nodeN[i]<-Node
}
for(i in 100,fossilData ) {
Node<-fastMRCA(AnolisTree,fossilData[i, "tip1"], fossilData[i,"tip2"])
fossilNodes[i]<-fossilData[i, "svl"]
nodeN[i]<-Node
}
for(i, 100,fossilData ) {
Node<-fastMRCA(AnolisTree,fossilData[i, "tip1"], fossilData[i,"tip2"])
fossilNodes[i]<-fossilData[i, "svl"]
nodeN[i]<-Node
}
for(i in 100:"fossilData" ) {
Node<-fastMRCA(AnolisTree,fossilData[i, "tip1"], fossilData[i,"tip2"])
fossilNodes[i]<-fossilData[i, "svl"]
nodeN[i]<-Node
}
for(i in 31:"fossilData" ) {
Node<-fastMRCA(AnolisTree,fossilData[i, "tip1"], fossilData[i,"tip2"])
fossilNodes[i]<-fossilData[i, "svl"]
nodeN[i]<-Node
}
print(i)
for(i in 1:10 ) {
Node<-fastMRCA(AnolisTree,fossilData[i, "tip1"], fossilData[i,"tip2"])
fossilNodes[i]<-fossilData[i, "svl"]
nodeN[i]<-Node
}
for(i in 1:dim(fossilData) ) {
Node<-fastMRCA(AnolisTree,fossilData[i, "tip1"], fossilData[i,"tip2"])
fossilNodes[i]<-fossilData[i, "svl"]
nodeN[i]<-Node
}
fossilData
for(i in 1:dim(fossilData)[1]) {
Node<-fastMRCA(AnolisTree,fossilData[i, "tip1"], fossilData[i,"tip2"])
fossilNodes[i]<-fossilData[i, "svl"]
nodeN[i]<-Node
}
tree
setwd('C:\\Users\\Mallori\\OneDrive\\Desktop\\Evolution\\Tasks\\Task_09')
library(phytools)
AnolisTree<-force.ultrametric(read.tree("https://jonsmitchell.com/data/anolis.tre"))
par(las=1)
hist(AnolisTree$edge.length, col='black', border='white', main="", xlab="edge lengths for the Anolis tree", ylim=c(0,50), xlim=c(0,6))
tipEdges <- which(AnolisTree$edge[,2]<=Ntip(AnolisTree))
Lengths <- AnolisTree$edge.length
names (Lengths) <- AnolisTree$tip.label
names (Lengths) [which(Lengths == min(Lengths))]
plot(AnolisTree, cex=0.25)
Labs <- sapply(AnolisTree$edge.length, round, digits=2)
edgelabels(text=Labs, cex=0.25)
plot(AnolisTree,type="fan")
setwd('C:\\Users\\Mallori\\OneDrive\\Desktop\\Evolution\\Tasks\\Task_09')
library(phytools)
AnolisTree<-force.ultrametric(read.tree("https://jonsmitchell.com/data/anolis.tre"))
par(las=1)
hist(AnolisTree$edge.length, col='black', border='white', main="", xlab="edge lengths for the Anolis tree", ylim=c(0,50), xlim=c(0,6))
tipEdges <- which(AnolisTree$edge[,2]<=Ntip(AnolisTree))
Lengths <- AnolisTree$edge.length
names (Lengths) <- AnolisTree$tip.label
names (Lengths) [which(Lengths == min(Lengths))]
plot(AnolisTree, cex=0.25)
Labs <- sapply(AnolisTree$edge.length, round, digits=2)
edgelabels(text=Labs, cex=0.25)
plot(AnolisTree,type="fan")
fastMRCA(AnolisTree,fossilData[i, "tip1"], fossilData[i,"tip2"])
fossilData
fossilData<- data.frame(svl=log(c(25.4, 23.2, 17.7, 19.7, 24, 31)), tip1=c("Anolis_anliniger", "Anolis_anliniger","Anolis_occultus","Anolis_ricordii", "Anolis_cristatellus", "Anolis_occultus"), tip2=c("Anolis_chlorocyanus", "Anolis_coelestinus", "Anolis_hendersoni", "Anolis_cybotes", "Anolis_angusticeps", "Anolis_angusticeps"))
plot(obj,type="fan", legend=0.7*max(nodeHeights(AnolisTree)), sig=2, fsize=c(0.7, 0.9))
fossilData<- data.frame(svl=log(c(25.4, 23.2, 17.7, 19.7, 24, 31)), tip1=c("Anolis_anliniger", "Anolis_anliniger","Anolis_occultus","Anolis_ricordii", "Anolis_cristatellus", "Anolis_occultus"), tip2=c("Anolis_chlorocyanus", "Anolis_coelestinus", "Anolis_hendersoni", "Anolis_cybotes", "Anolis_angusticeps", "Anolis_angusticeps"))
fossilNodes<-c()
nodeN<-c()
for(i in 1:dim(fossilData)[1]) {
Node<-fastMRCA(AnolisTree,fossilData[i, "tip1"], fossilData[i,"tip2"])
fossilNodes[i]<-fossilData[i, "svl"]
nodeN[i]<-Node
}
fastMRCA(AnolisTree,fossilData[i, "tip1"], fossilData[i,"tip2"])
fossilData
AnolisTree$tip.label
plot(obj,type="fan", legend=0.7*max(nodeHeights(AnolisTree)), sig=2, fsize=c(0.7, 0.9))
fossilData<- data.frame(svl=log(c(25.4, 23.2, 17.7, 19.7, 24, 31)), tip1=c("Anolis_aliniger", "Anolis_aliniger","Anolis_occultus","Anolis_ricordii", "Anolis_cristatellus", "Anolis_occultus"), tip2=c("Anolis_chlorocyanus", "Anolis_coelestinus", "Anolis_hendersoni", "Anolis_cybotes", "Anolis_angusticeps", "Anolis_angusticeps"))
fossilNodes<-c()
nodeN<-c()
for(i in 1:dim(fossilData)[1]) {
Node<-fastMRCA(AnolisTree,fossilData[i, "tip1"], fossilData[i,"tip2"])
fossilNodes[i]<-fossilData[i, "svl"]
nodeN[i]<-Node
}
names(fossilNodes)<-nodeN
Ancestors_withFossils <_ fastAnc(tree,svl,anc.states=fossilNodes, CI=TRUE)
Ancestors_withFossils <- fastAnc(tree,svl,anc.states=fossilNodes, CI=TRUE)
Ancestors_withFossils <- fastAnc(tree,svl,anc.states=fossilNodes, CI=TRUE, var=TRUE)
plot(obj,type="fan", legend=0.7*max(nodeHeights(AnolisTree)), sig=2, fsize=c(0.7, 0.9))
fossilData<- data.frame(svl=log(c(25.4, 23.2, 17.7, 19.7, 24, 31)), tip1=c("Anolis_aliniger", "Anolis_aliniger","Anolis_occultus","Anolis_ricordii", "Anolis_cristatellus", "Anolis_occultus"), tip2=c("Anolis_chlorocyanus", "Anolis_coelestinus", "Anolis_hendersoni", "Anolis_cybotes", "Anolis_angusticeps", "Anolis_angusticeps"))
fossilNodes<-c()
nodeN<-c()
for(i in 1:dim(fossilData)[1]) {
Node<-fastMRCA(AnolisTree,fossilData[i, "tip1"], fossilData[i,"tip2"])
fossilNodes[i]<-fossilData[i, "svl"]
nodeN[i]<-Node
}
names(fossilNodes)<-nodeN
Ancestors_withFossils <- fastAnc(tree,svl,anc.states=fossilNodes, CI=TRUE, var=TRUE)
Ancestors_withFossils <-fastAnc(tree,svl,anc.states=fossilNodes, CI=TRUE, var=TRUE)
Ancestors_withFossils <-fastAnc(AnolisTree,svl,anc.states=fossilNodes, CI=TRUE, var=TRUE)
Ancestors<-fastAnc(AnolisTree, svl, vars=TRUE, CI=TRUE)
Ancestors(CI95)
fit.BM<-fastAnc(AnolisTree, svl, CI=TRUE)
print(fit.BM,printlen=10)
plot("Anolis_alinger","Anolis_occultus")
plot(fossilData, Ancestors_withFossils)
plot(fossilData, AnolisTree)
plot(fossilData, Ancestors)
plot(Ancestors_withFossils, Ancestors)
plot(Ancestors, Ancestors_withFossils)
plot(Ancestors, fossilData)
plot(Ancestors_withFossils, fossilData)
plot(Ancestors_withFossils, fossilNodes)
plot(nodeN, fossilNodes)
plot(Ancestors_withFossils, fossilNodes)
plot(Ancestors, fossilNodes)
plot(fossilData, fossilNodes)
plot(fossilData, nodeN)
#Question 7: Fossils change the ancestral sizes by decreasing size over time.
install.packages("geiger")
fitcontinuous(fossilData,Ancestors)
continuous(fossilData,Ancestors)
library(geiger)
fitContinuous(fossilData,Ancestors)
fitContinuous(fossilData,fossilNodes)
fitContinuous(fossilData,svl)
fitContinuous(Ancestors,svl)
fitContinuous(Ancestors_withFossils,svl)
fitContinuous(Ancestors_withFossils,Ancestors)
fitContinuous(Ancestors_withFossils,fossilData)
fitContinuous(Ancestors_withFossils,nodeN)
fitContinuous(Ancestors_withFossils,svl)
AncestorFossilFit<- fitContinuous(Ancestors_withFossils,svl)
AncestorFossilFit<- fitContinuous(Ancestors_withFossils,nodeN)
AncestorFossilFit<- fitContinuous(AnolisTree,data)
plot(AncestorFossilFit)
AncestorTreeFit<- fitContinuous(AnolisTree,data)
AncestorFossilFit <- fitContinuous(Ancestors_withFossils, data)
AncestorFossilFit <- fitContinuous(Ancestors, data)
AncestorFossilFit <- fitContinuous(fossilData, data)
AncestorFossilFit <- fitContinuous(fossilNodes, data)
AncestorFossilFit <- fitContinuous(fossilData, data)
AncestorFossilFit <- fitContinuous(svl, data)
FossilNodesFit<- fitContinuous(fossilNodes, data)
#Question 9: The best fit model is AncestorTreeFit
fit.AT<- fastAnc(AncestorTreeFit, CI=TRUE)
#Question 9: The best fit model is AncestorTreeFit
fit.AT<- fastAnc(AnolisTree, data, CI=TRUE)
#Question 9: The best fit model is AncestorTreeFit
print(fit.BM)
#Question 8:
AncestorTreeFit<- fitContinuous(AnolisTree,svl)
#Question 9: The best fit model is AncestorTreeFit
print(fit.BM)
AnolisTree<-force.ultrametric(read.tree("https://jonsmitchell.com/data/anolis.tre"))
par(las=1)
hist(AnolisTree$edge.length, col='black', border='white', main="", xlab="edge lengths for the Anolis tree", ylim=c(0,50), xlim=c(0,6))
tipEdges <- which(AnolisTree$edge[,2]<=Ntip(AnolisTree))
Lengths <- AnolisTree$edge.length
names (Lengths) <- AnolisTree$tip.label
names (Lengths) [which(Lengths == min(Lengths))]
plot(AnolisTree, cex=0.25)
Labs <- sapply(AnolisTree$edge.length, round, digits=2)
edgelabels(text=Labs, cex=0.25)
plot(AnolisTree,type="fan")
nrow(AnolisTree)
nlevels(AnolisTree)
nlength(AnolisTree)
nodelabels(AnolisTree)
AnolisTree<-force.ultrametric(read.tree("https://jonsmitchell.com/data/anolis.tre"))
par(las=1)
hist(AnolisTree$edge.length, col='black', border='white', main="", xlab="edge lengths for the Anolis tree", ylim=c(0,50), xlim=c(0,6))
tipEdges <- which(AnolisTree$edge[,2]<=Ntip(AnolisTree))
Lengths <- AnolisTree$edge.length
names (Lengths) <- AnolisTree$tip.label
names (Lengths) [which(Lengths == min(Lengths))]
plot(AnolisTree, cex=0.25)
Labs <- sapply(AnolisTree$edge.length, round, digits=2)
edgelabels(text=Labs, cex=0.25)
plot(AnolisTree,type="fan")
nodelabel.phylo(AnolisTree)
nodelabels.cophylo(AnolisTree)
print(AnolisTree)
print(AnolisTree, root)
setwd('C:\\Users\\Mallori\\OneDrive\\Desktop\\Evolution\\Tasks\\Task_09')
library(phytools)
AnolisTree<-force.ultrametric(read.tree("https://jonsmitchell.com/data/anolis.tre"))
par(las=1)
hist(AnolisTree$edge.length, col='black', border='white', main="", xlab="edge lengths for the Anolis tree", ylim=c(0,50), xlim=c(0,6))
tipEdges <- which(AnolisTree$edge[,2]<=Ntip(AnolisTree))
Lengths <- AnolisTree$edge.length
names (Lengths) <- AnolisTree$tip.label
names (Lengths) [which(Lengths == min(Lengths))]
plot(AnolisTree, cex=0.25)
Labs <- sapply(AnolisTree$edge.length, round, digits=2)
edgelabels(text=Labs, cex=0.25)
plot(AnolisTree,type="fan")
print(AnolisTree)
#Question 1: There are 82 tips with no branch lengths present.
data<-read.csv("https://jonsmitchell.com/data/svl.csv", stringsAsFactors =F, row.names=1)
head(data)
length(data)
row(data)
names(data)
max(data)
plot(data)
#Question 2: The "data" is a linear object with some data points relating to different species.
svl<-setNames (data$svl, rownames(data))
Ancestors<-fastAnc(AnolisTree, svl, vars=TRUE, CI=TRUE)
fit.BM<-fastAnc(AnolisTree, svl, CI=TRUE)
print(fit.BM,printlen=10)
#Question 3: The estimated values are stored in the lower and upper 95% CI. The CI95 decides whether to compute 95% confidence intervals on state estimates.
#Question 4: 83 has a lower of 3.85 and an upper of 4.252, while 84 has a lower of 3.86 and a higher of 4.209.
par(mar=c(0.1,0.1,0.1,0.1))
plot(tree,type="fan",lwd=2,show.tip.label=F)
tiplabels(pch=16, cex=0.25*svl[tree$tip.label])
nodelabels(pch=16, cex=0.25*Ancestors$ace)
obj<-contMap(AnolisTree, svl, plot=F)
plot(obj,type="fan", legend=0.7*max(nodeHeights(AnolisTree)), sig=2, fsize=c(0.7, 0.9))
fossilData<- data.frame(svl=log(c(25.4, 23.2, 17.7, 19.7, 24, 31)), tip1=c("Anolis_aliniger", "Anolis_aliniger","Anolis_occultus","Anolis_ricordii", "Anolis_cristatellus", "Anolis_occultus"), tip2=c("Anolis_chlorocyanus", "Anolis_coelestinus", "Anolis_hendersoni", "Anolis_cybotes", "Anolis_angusticeps", "Anolis_angusticeps"))
fossilNodes<-c()
nodeN<-c()
#Question 5: code below
for(i in 1:dim(fossilData)[1]) {
Node<-fastMRCA(AnolisTree,fossilData[i, "tip1"], fossilData[i,"tip2"])
fossilNodes[i]<-fossilData[i, "svl"]
nodeN[i]<-Node
}
names(fossilNodes)<-nodeN
Ancestors_withFossils <-fastAnc(AnolisTree,svl,anc.states=fossilNodes, CI=TRUE, var=TRUE)
plot(fossilData, nodeN)
#Question 7: Fossils change the ancestral sizes by decreasing size over time.
install.packages("geiger")
library(geiger)
#Question 8:
AncestorTreeFit<- fitContinuous(AnolisTree,svl)
svlFit <- fitContinuous(svl, data)
FossilNodesFit<- fitContinuous(fossilNodes, data)
#Question 9: The best fit model is AncestorTreeFit
print(fit.BM)
#Question 10: The model isn't different from what fastAnc shows.
install.packages("geiger")
