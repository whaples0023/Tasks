points(alleleFreqs$d_freq, alleleFreqs$d_birth, col='blue')
points(alleleFreqs$d_freq, alleleFreqs$d_surv, col='red')
install.packages(paleodb.org)
install.packages(Paeobiology Database)
install.packages(PaeobiologyDatabase)
install.packages(fishbase)
install.packages(rfishbase)
install.packages"paleodb.org"
install.packages"fishbase"
library(phytools)
install.packages(c("ape", "maps"))
library(ape)
text.string<-
"((((((cow,pig),whale),bat(,(lemur,human))),(robin,iguana)),coelacanth),(gold_fish,trout)),shark);"
vert.tree<-read.tree(text=text.string)
vert.tree<-read.tree (text=text.string)
text.string<-
"((((((cow,pig),whale),bat(,(lemur,human))),(robin,iguana)),coelacanth),(gold_fish,trout)),shark);"
vert.tree<-read.tree (text=text.string)
vert.tree<-read . tree (text=text.string)
vert.tree<-read.tree (text=text.string)
library(phytools)
library(ape)
text.string<-
"(((((((cow,pig),whale),bat(,(lemur,human))),(robin,iguana)),coelacanth),(gold_fish,trout)),shark);"
vert.tree<-read.tree (text=text.string)
plot(vert.tree, edge.width=2)
nodelabels(frame="circle", bg='white', cex=1)
vert.tree
str(vert.tree)
tree<-read.tree(text="(((A,B),(C,D)),E);")
plotTree(tree, offset=1)
tiplabels(frame="circle", bg='lightblue', cex=1)
nodelabels(frame="circle", bg='white', cex=1)
tree$tip.label
tree$edge
AnolisTree<-force.ultrametric(read.tree("https://jonsmitchell.com/data/anolis.tre"))
par(las=1)
hist(AnolisTree$edge.length, col='black', border='white', main="", xlab="edge lengths for the Anolis tree", ylim=c(0,50), xlim=c(0,6))
tipEdges <- which(AnolisTree$edge[,2]<=Ntip(AnolisTree))
Lengths <- ANolisTree$edge.length
Lengths <- AnolisTree$edge.length
names (Lengths) <- AnolisTree$tip.label
names (Lengths) [which(Lengths == min(Lengths))]
plot(AnolisTree, cex=0.25)
Labs <- sapply(AnolisTree$edge.length, round, digits=2)
edgelabels(text=Labs, cex=0.25)
?plot.phylo
str(vert.tree)
tree<-read.tree(text="(((A,B),(C,D)),E);")
plotTree(tree, offset=1)
tiplabels(frame="circle", bg='lightblue', cex=1)
nodelabels(frame="circle", bg='white', cex=1)
tree$tip.label
tree$edge
AnolisTree<-force.ultrametric(read.tree("https://jonsmitchell.com/data/anolis.tre"))
par(las=1)
hist(AnolisTree$edge.length, col='black', border='white', main="", xlab="edge lengths for the Anolis tree", ylim=c(0,50), xlim=c(0,6))
tipEdges <- which(AnolisTree$edge[,2]<=Ntip(AnolisTree))
Lengths <- AnolisTree$edge.length
names (Lengths) <- AnolisTree$tip.label
names (Lengths) [which(Lengths == min(Lengths))]
plot(AnolisTree, cex=0.25)
Labs <- sapply(AnolisTree$edge.length, round, digits=2)
edgelabels(text=Labs, cex=0.25)
library(phytools)
library(ape)
text.string<-
"(((((((cow,pig),whale),bat(,(lemur,human))),(robin,iguana)),coelacanth),(gold_fish,trout)),shark);"
vert.tree<-read.tree (text=text.string)
plot(vert.tree, edge.width=2)
nodelabels(frame="circle", bg='white', cex=1)
#Question1: human because they both come from node 14?
#Question1: human because they both come from node 14?
plot(vert.tree, type=cladogram.plot)
#Question1: human because they both come from node 14?
plot(vert.tree, type=cladogram)
#Question1: human because they both come from node 14?
plot(vert.tree, type="cladogram"")
vert.tree
#Question2: There are no branch lengths.
str(vert.tree)
tree<-read.tree(text="(((A,B),(C,D)),E);")
plotTree(tree, offset=1)
tiplabels(frame="circle", bg='lightblue', cex=1)
nodelabels(frame="circle", bg='white', cex=1)
tree$tip.label
tree$edge
AnolisTree<-force.ultrametric(read.tree("https://jonsmitchell.com/data/anolis.tre"))
par(las=1)
hist(AnolisTree$edge.length, col='black', border='white', main="", xlab="edge lengths for the Anolis tree", ylim=c(0,50), xlim=c(0,6))
tipEdges <- which(AnolisTree$edge[,2]<=Ntip(AnolisTree))
Lengths <- AnolisTree$edge.length
names (Lengths) <- AnolisTree$tip.label
names (Lengths) [which(Lengths == min(Lengths))]
plot(AnolisTree, cex=0.25)
Labs <- sapply(AnolisTree$edge.length, round, digits=2)
edgelabels(text=Labs, cex=0.25)
?plot.phylo
#Question3: plot(SomeData, main = "With branch lengths")
#Question4: plot(SomeData, type= "")
#Question5: plot(SomeData, tip.color=c("red",some number)
#Question6:
#Question1: human because they both come from node 14?
plot(vert.tree, type="cladogram")
#Question1: human because they both come from node 14?
plot(vert.tree, type="fan")
#Question1: human because they both come from node 14?
plot(vert.tree, type="radial")
#Question1: human because they both come from node 14?
plot(vert.tree, type="unrooted")
#Question1: human because they both come from node 14?
plot(vert.tree, type="tidy")
#Question1: human because they both come from node 14?
plot(vert.tree, type="fan")
text.string<-
"(((((((cow,pig),whale),bat(,(lemur,human))),(robin,iguana)),coelacanth),(gold_fish,trout)),shark);"
vert.tree<-read.tree (text=text.string)
plot(vert.tree, edge.width=2)
nodelabels(frame="circle", bg='white', cex=1)
#Question1: human because they both come from node 14?
#Question1: human because they both come from node 14?
#Note to self - you can come back here and practice commands
plot(vert.tree, show.tip.label=FALSE)
text.string<-
"(((((((cow,pig),whale),bat(,(lemur,human))),(robin,iguana)),coelacanth),(gold_fish,trout)),shark);"
vert.tree<-read.tree (text=text.string)
plot(vert.tree, edge.width=2)
nodelabels(frame="circle", bg='white', cex=1)
AnolisTree<-force.ultrametric(read.tree("https://jonsmitchell.com/data/anolis.tre"))
par(las=1)
hist(AnolisTree$edge.length, col='black', border='white', main="", xlab="edge lengths for the Anolis tree", ylim=c(0,50), xlim=c(0,6))
tipEdges <- which(AnolisTree$edge[,2]<=Ntip(AnolisTree))
Lengths <- AnolisTree$edge.length
names (Lengths) <- AnolisTree$tip.label
names (Lengths) [which(Lengths == min(Lengths))]
plot(AnolisTree, cex=0.25)
Labs <- sapply(AnolisTree$edge.length, round, digits=2)
edgelabels(text=Labs, cex=0.25)
#Question3: plot(Some.Data, show.tip.label=FALSE)
#Question4: plot(Some.Data, type= "fan")
#Question5: plot(Some.Data, tip.color=c("red",some number)
tree$edge
#Question3: plot(Some.Data, show.tip.label=FALSE)
#Question4: plot(Some.Data, type= "fan")
#Question5: plot(Some.Data, tip.color=c("red",some number)
AnolisTree$edge
AnolisTree(row.names)
AnolisTree$tip.label
ShortestEdge <- which.min(Lengths)
library(phytools)
library(ape)
text.string<-
"(((((((cow,pig),whale),bat(,(lemur,human))),(robin,iguana)),coelacanth),(gold_fish,trout)),shark);"
vert.tree<-read.tree (text=text.string)
plot(vert.tree, edge.width=2)
nodelabels(frame="circle", bg='white', cex=1)
#Question1: human because they both come from node 14?
#Note to self - A good place to practice commands for phylogeny tree
vert.tree
#Question2: There are no branch lengths.
str(vert.tree)
tree<-read.tree(text="(((A,B),(C,D)),E);")
plotTree(tree, offset=1)
tiplabels(frame="circle", bg='lightblue', cex=1)
nodelabels(frame="circle", bg='white', cex=1)
tree$tip.label
tree$edge
AnolisTree<-force.ultrametric(read.tree("https://jonsmitchell.com/data/anolis.tre"))
par(las=1)
hist(AnolisTree$edge.length, col='black', border='white', main="", xlab="edge lengths for the Anolis tree", ylim=c(0,50), xlim=c(0,6))
tipEdges <- which(AnolisTree$edge[,2]<=Ntip(AnolisTree))
Lengths <- AnolisTree$edge.length
names (Lengths) <- AnolisTree$tip.label
names (Lengths) [which(Lengths == min(Lengths))]
plot(AnolisTree, cex=0.25)
Labs <- sapply(AnolisTree$edge.length, round, digits=2)
edgelabels(text=Labs, cex=0.25)
?plot.phylo
#Question3: plot(Some.Data, show.tip.label=FALSE)
#Question4: plot(Some.Data, type= "fan")
#Question5: plot(Some.Data, tip.color=c("red",some number)
AnolisTree$edge
AnolisTree$tip.label
ShortestEdge <- which.min(Lengths)
#Question6:
ShortestEdge <- which.min(Lengths)
which.min(Lengths)
#Question6:Anolis_occultus has the shortest edge length
AnolisTree2 <-drop.tip(AnolisTree, tip = ShortestEdge)
plot(AnolisTree2, cex = 0.25)
ltt(AnolisTree)
abline (0, 1, lwd=2, col='red', lty=2)
?fit.bd()
data(ANolislizards)
data <- (ANolislizards)
data <- ("ANolislizards")
data <- ("Anolislizards")
sampling.f <- Ntip(Anolislizards)/0.2
sampling.f <- Ntip("Anolislizards")/0.2
sampling.f<-Ntip("Anolislizards")/0.2
sampling.f<-("Anolislizards")/0.2
sampling.f<-(("Anolislizards")/0.2)
bd.fit<-fit.bd("Anolislizards", rho=0.2.f)
bd.fit<-fit.bd("Anolislizards", rho=0.2)
bd.fit<-fit.bd('Anolislizards', rho=0.2)
lizards<-ltt(AnolisTree)
data<-ltt(AnolisTree)
lizards <- (data)
bd.fit<-fit.bd(lizards, rho=0.2)
bd.fit<-fit.bd('lizards', rho=0.2)
sampling.f<-Ntip(lizards)/0.2
sampling.f<-Ntip(lizards)/0.2
sampling.f<-(lizards)/0.2
sampling.f<-Ntip.phylo(lizards)/0.2
bd.fit<-fit.bd(lizards, rho=sampling.f)
bd.fit<-fit.bd((lizards), rho=sampling.f)
bd.fit<-fit.bd((lizards),rho=(sampling.f))
bd.fit<-fit.bd("lizards",rho=(sampling.f))
bd.fit<-fit.bd((lizards),rho=(sampling.f))
bd.fit<-fit.bd(lizards,rho=sampling.f)
bd.fit<-fit.bd.phylo(lizards,rho=sampling.f)
bd.fit<-fit.bd(lizards,rho=Ntip.phylo(lizards)/0.2)
bd.fit<-fit.bd(lizards,rho=sampling.f)
bd.fit<-fit.yule(lizards,rho=sampling.f)
bd.fit<-fitBayes(lizards,rho=sampling.f)
bd.fit<-"fit.bd"(lizards,rho =sampling.f)
bd.fit<-fit.bd(lizards,rho =sampling.f)
data<-ltt(abline)
data<-(abline)
lizards <- (data)
sampling.f<-Ntip.phylo(lizards)/0.2
sampling.f<-Ntip(lizards)/0.2
sampling.f<-Ntip.multiPhylo(lizards)/0.2
sampling.f<-Ntip(lizards)/0.2
sampling.f<-"Ntip"(lizards)/0.2
library(phytools)
library(ape)
text.string<-
"(((((((cow,pig),whale),bat(,(lemur,human))),(robin,iguana)),coelacanth),(gold_fish,trout)),shark);"
vert.tree<-read.tree (text=text.string)
plot(vert.tree, edge.width=2)
nodelabels(frame="circle", bg='white', cex=1)
#Question1: human because they both come from node 14?
#Note to self - A good place to practice commands for phylogeny tree
vert.tree
#Question2: There are no branch lengths.
str(vert.tree)
tree<-read.tree(text="(((A,B),(C,D)),E);")
plotTree(tree, offset=1)
tiplabels(frame="circle", bg='lightblue', cex=1)
nodelabels(frame="circle", bg='white', cex=1)
tree$tip.label
tree$edge
AnolisTree<-force.ultrametric(read.tree("https://jonsmitchell.com/data/anolis.tre"))
par(las=1)
hist(AnolisTree$edge.length, col='black', border='white', main="", xlab="edge lengths for the Anolis tree", ylim=c(0,50), xlim=c(0,6))
tipEdges <- which(AnolisTree$edge[,2]<=Ntip(AnolisTree))
Lengths <- AnolisTree$edge.length
names (Lengths) <- AnolisTree$tip.label
names (Lengths) [which(Lengths == min(Lengths))]
plot(AnolisTree, cex=0.25)
Labs <- sapply(AnolisTree$edge.length, round, digits=2)
edgelabels(text=Labs, cex=0.25)
?plot.phylo
#Question3: plot(Some.Data, show.tip.label=FALSE)
#Question4: plot(Some.Data, type= "fan")
#Question5: plot(Some.Data, tip.color=c("red",some number)
AnolisTree$edge
AnolisTree$tip.label
ShortestEdge <- which.min(Lengths)
which.min(Lengths)
#Question6:Anolis_occultus has the shortest edge length
#Question7: The code below this line
AnolisTree2 <-drop.tip(AnolisTree, tip = ShortestEdge)
#Question8: The code below this line
plot(AnolisTree2, cex = 0.25)
ltt(AnolisTree)
abline (0, 1, lwd=2, col='red', lty=2)
#Question9: This line never goes down because the number of lineages are increasing. The slope is always the same, and these lizards are reproducing at a constant rate.
?fit.bd()
data<-ltt(AnolisTree)
lizards <- (data)
sampling.f<-Ntip.phylo(lizards)/0.2
bd.fit<-fit.bd(lizards,rho =sampling.f)
bd.fit<-fit.bd((lizards),rho =sampling.f)
bd.fit<-fit.bd((lizards),rho =(sampling.f))
bd.fit<-fit.bd(lizards),rho =sampling.f)
bd.fit<-fit.bd(lizards), rho =sampling.f)
bd.fit<-fit.bd(lizards) rho =sampling.f)
bd.fit<-fit.bd(lizards, rho =sampling.f)
data<-AnolisTree
lizards <- (data)
sampling.f<-Ntip.phylo(lizards)/0.2
bd.fit<-fit.bd(lizards, rho =sampling.f)
print(bd.fit)
b
calc(b)
sum(b)
sum(bd)
sum('bd')
abline (0, 1, lwd=2, col='red', lty=2)
plot(bd.fit)
plot(bd.fit)
plot(bd.fit, xlab=100, ylab=100)
plot(bd.fit, x=100, y=100)
plot(bd.fit, xlim=(0,100), ylim=(0,100)
plot(bd.fit, xlim=(0 100), ylim=(0 100)
plot(bd.fit, xlim=(100), ylim=(0 100)
plot(bd.fit,TRUE, data)
plot(bd.fit,TRUE data)
plot(bd.fit,TRUE, data)
plot(bd.fit, cex=0.25, TRUE, data)
length(bd.fit)
head(bd.fit)
row.names(bd.fit)
row.names.data.frame(bd.fit)
head.matrix(bd.fit)
plot.design(bd.fit)
print(bd.fit)
library(phytools)
library(ape)
text.string<-
"(((((((cow,pig),whale),bat(,(lemur,human))),(robin,iguana)),coelacanth),(gold_fish,trout)),shark);"
vert.tree<-read.tree (text=text.string)
plot(vert.tree, edge.width=2)
nodelabels(frame="circle", bg='white', cex=1)
#Question1: human because they both come from node 14?
#Note to self - A good place to practice commands for phylogeny tree
vert.tree
#Question2: There are no branch lengths.
str(vert.tree)
tree<-read.tree(text="(((A,B),(C,D)),E);")
plotTree(tree, offset=1)
tiplabels(frame="circle", bg='lightblue', cex=1)
nodelabels(frame="circle", bg='white', cex=1)
tree$tip.label
tree$edge
AnolisTree<-force.ultrametric(read.tree("https://jonsmitchell.com/data/anolis.tre"))
par(las=1)
hist(AnolisTree$edge.length, col='black', border='white', main="", xlab="edge lengths for the Anolis tree", ylim=c(0,50), xlim=c(0,6))
tipEdges <- which(AnolisTree$edge[,2]<=Ntip(AnolisTree))
Lengths <- AnolisTree$edge.length
names (Lengths) <- AnolisTree$tip.label
names (Lengths) [which(Lengths == min(Lengths))]
plot(AnolisTree, cex=0.25)
Labs <- sapply(AnolisTree$edge.length, round, digits=2)
edgelabels(text=Labs, cex=0.25)
?plot.phylo
#Question3: plot(Some.Data, show.tip.label=FALSE)
#Question4: plot(Some.Data, type= "fan")
#Question5: plot(Some.Data, tip.color=c("red",some number)
AnolisTree$edge
AnolisTree$tip.label
ShortestEdge <- which.min(Lengths)
which.min(Lengths)
#Question6:Anolis_occultus has the shortest edge length
#Question7: The code below this line
AnolisTree2 <-drop.tip(AnolisTree, tip = ShortestEdge)
#Question8: The code below this line
plot(AnolisTree2, cex = 0.25)
ltt(AnolisTree)
abline (0, 1, lwd=2, col='red', lty=2)
#Question9: This line never goes down because the number of lineages are increasing. The slope is always the same, and these lizards are reproducing at a constant rate.
?fit.bd()
data<-AnolisTree
lizards <- (data)
sampling.f<-Ntip.phylo(lizards)/0.2
bd.fit<-fit.bd(lizards, rho =sampling.f)
print(bd.fit)
?plot.phylo
#Question10: ML(b/lambda) = 0.001187 ML(d/mu) = 0 log(L) = 101.5265
layout.show(bd.fit)
#Question10: ML(b/lambda) = 0.001187 ML(d/mu) = 0 log(L) = 101.5265
length.out(bd.fit)
#Question10: ML(b/lambda) = 0.001187 ML(d/mu) = 0 log(L) = 101.5265
seq_len(bd.fit)
#Question10: ML(b/lambda) = 0.001187 ML(d/mu) = 0 log(L) = 101.5265
plot.phylo(bd.fit)
#Question10: ML(b/lambda) = 0.001187 ML(d/mu) = 0 log(L) = 101.5265
install.packages(treebase)
#Question10: ML(b/lambda) = 0.001187 ML(d/mu) = 0 log(L) = 101.5265
install.packages(treebase)
install.packages("treebase")
#Question10: ML(b/lambda) = 0.001187 ML(d/mu) = 0 log(L) = 101.5265
library(treebase)
data(treebase)
plot.phylo(tree frog)
head(treebase)
par(las=1)
hist(treebase$edge.length, col='black', border='white', main="", xlab="edge lengths for treebase", ylim=c(0,50), xlim=(0,6))
vert.tree
vert.treebase
cache_treebase(file=paste("treebase",Sys.Date(), "rda",sep = ""),pause1 = 3, pause2 = 3, attempts = 10, max_trees = Inf, only_metadata = FALSE, save =TRUE)
cache_treebase(file=paste("treebase",Sys.Date(tree frog), "rda",sep = ""),pause1 = 3, pause2 = 3, attempts = 10, max_trees = Inf, only_metadata = FALSE, save =TRUE)
cache_treebase(file=paste("treebase",Sys.Date(), "rda",sep = "tree frog"),pause1 = 3, pause2 = 3, attempts = 10, max_trees = Inf, only_metadata = FALSE, save =TRUE)
cache_treebase(file=paste("treebase",Sys.Date(), "rda",sep = ""),pause1 = 3, pause2 = 3, attempts = 10, max_trees = Inf, only_metadata = FALSE, save =TRUE)
search_treebase(tree frog)
search_treebase()
search_treebase(by )
search_treebase(), by
search_treebase() by
search_treebase() by taxon
search_treebase() by taxa
search_treebase(taxa by year)
setwd('C:\\Users\\Mallori\\OneDrive\\Desktop\\Evolution\\Tasks\\Project Folder')
Data <- read.csv('RData.csv')
head(Data)
plot(Data)
plot(Data, boxplot)
boxplot(Data)
?plot
barplot(Data)
head(Data)
plot(Data)
setwd('C:\\Users\\Mallori\\OneDrive\\Desktop\\Evolution\\Tasks\\Project Folder')
Data <- read.csv('BlackRobinData.csv')
head(Data)
plot(Data)
boxplot(Data)
boxplot(Data)
Site<-c(MGR,TPB,WSB)
Site<-c(TPB,WSB)
Deaths<-c(48,79,124)
ll<- c(0.04810441,0.04403906,0.04427134)
ll ave<- c(0.04810441,0.04403906,0.04427134)
llave<- c(0.04810441,0.04403906,0.04427134)
df<-data.frame(llave,Deaths)
library(ggplot2)
ggplot(df)  +
geom_bar(aes(x=Year, y=Response),stat="identity", fill="tan1", colour="sienna3")+
geom_line(aes(x=Year, y=Rate),stat="identity")+
geom_text(aes(label=Rate, x=Year, y=Rate), colour="black")+
geom_text(aes(label=Response, x=Year, y=0.9*Response), colour="black")
ggplot(df)  +
geom_bar(aes(x=Year, y=Response),stat="identity", fill="tan1", colour="sienna3")+
geom_line(aes(x=Year, y=Rate),stat="identity")+
geom_text(aes(label=Rate, x=llave, y=Deaths), colour="black")+
geom_text(aes(label=Response, x=Year, y=0.9*Response), colour="black")
ggplot(df)  +
geom_bar(aes(x=Year, y=Response),stat="identity", fill="tan1", colour="sienna3")+
geom_line(aes(x=Year, y=Rate),stat="identity")+
geom_text(aes(label=Rate, x=llave, y=Deaths), colour="black")+
geom_text(aes(label=Response, x=llave, y=0.9*Response), colour="black")
ggplot(df)  +
geom_bar(aes(x=llave, y=Deaths),stat="identity", fill="tan1", colour="sienna3")+
geom_line(aes(x=llave, y=Deaths),stat="identity")+
geom_text(aes(label=Rate, x=llave, y=Deaths), colour="black")+
geom_text(aes(label=Response, x=llave, y=0.9*Response), colour="black")
ggplot(df)  +
geom_bar(aes(x=llave, y=Deaths),stat="identity", fill="tan1", colour="sienna3")+
geom_line(aes(x=llave, y=Deaths),stat="identity")+
geom_text(aes(label=Deaths, x=llave, y=Deaths), colour="black")+
geom_text(aes(label=Response, x=llave, y=0.9*Response), colour="black")
Site<-c(1,2,3)
ggplot(df)  +
geom_bar(aes(x=Site, y=Deaths),stat="identity", fill="tan1", colour="sienna3")+
geom_line(aes(x=Site, y=Deaths),stat="identity")+
geom_text(aes(label=Deaths, x=Site, y=Deaths), colour="black")+
geom_text(aes(label=llave, x=Site, y=0.9*llave), colour="black")
setwd('C:\\Users\\Mallori\\OneDrive\\Desktop\\Evolution\\Tasks\\Project Folder')
Data <- read.csv('BlackRobinData.csv')
head(Data)
Deaths<-c(48,79,124)
llave<- c(0.04810441,0.04403906,0.04427134)
Site<-c(1,2,3)
df<-data.frame(llave,Deaths)
library(ggplot2)
ggplot(df)  +
geom_bar(aes(x=Site, y=Deaths),stat="identity", fill="tan1", colour="sienna3")+
geom_line(aes(x=Site, y=Deaths),stat="identity")+
geom_text(aes(label=Deaths, x=Site, y=Deaths), colour="black")+
geom_text(aes(label=llave, x=Site, y=0.9*llave), colour="black")
head(Data)
Data2<-read.csv('BlackRObinData2.csv')
Head(Data2)
head(Data2)
show(Data2)
plot(Data$ll, Data$Deaths)
plot(Data2$ll, Data2$Deaths)
boxplot(Data2)
head(Data2)
show(Data2)
plot(Data$ll, Data$Deaths)
plot(Data2$ll, Data2$Deaths)
boxplot(Data2$11, Data2$Deaths)
boxplot(Data2$ll, Data2$Deaths)
head(Data2)
show(Data2)
plot(Data$ll, Data$Deaths)
plot(Data2$ll, Data2$Deaths)
plot(Data2$ll, Data2$Fa)
setwd('C:\\Users\\Mallori\\OneDrive\\Desktop\\Evolution\\Tasks\\Project Folder')
Data <- read.csv('BlackRobinData.csv')
head(Data)
Data2<-read.csv('BlackRObinData2.csv')
head(Data2)
plot(Data2$ll, Data2$Fa)
plot(Data2$ll, Data2$Fa, xlab="", ylab="", pch=16)
plot(Data2$ll, Data2$Fa, xlab="Recessive Allele Frequency in Offspring", ylab="Inbreeding in Offspring Frequency", pch=16)
oneway.test(Data$ll, Data$Fa)
one.way <- aov(ll ~ Fa, data = BlackRobinData2)
one.way <- aov(ll ~ Fa, data = BlackRobinData2.csv)
one.way <- aov(ll ~ Fa, data = Data2)
summary(one.way)
?plot
plot(Data2$ll, Data2$Fa, xlab="Recessive Allele Frequency in Offspring", ylab="Ancestoral Inbreeding Frequency", pch=16)
Data2<-read.csv('BlackRObinData2.csv')
head(Data2)
plot(Data2$ll, Data2$Fa, xlab="Recessive Allele Frequency in Offspring", ylab="Ancestoral Inbreeding Frequency", pch=16)
one.way <- aov(ll ~ Fa, data = Data2)
summary(one.way)
